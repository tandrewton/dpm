rsync -r at965@transfer-grace.hpc.yale.edu:/gpfs/loomis/project/fas/ohern/at965/dpm/cell /mnt/c/Users/atata/projects/dpm/pipeline/cells/.


bash bash/cells/submit_neuralTube.sh 10 20 1.0 0.01 -0.01 0.002 0.0 100 pi_ohern,day,scavenge 0-12:00:00 1 1

bash bash/cells/submit_neuralTube.sh 24 20 1.0 0.01 -0.01 0.002 0.0 3000 pi_ohern,day,scavenge 0-12:00:00 1 1

bash bash/cells/submit_neuralTube.sh 24 20 1.0 0.01 -0.01 0.002 0.002 3000 pi_ohern,day,scavenge 0-12:00:00 1 1

bash bash/cells/submit_neuralTube.sh 24 20 1.0 0.01 -0.01 0.002 0.02 3000 pi_ohern,day,scavenge 0-12:00:00 1 1

bash bash/cells/submit_neuralTube.sh 24 20 1.0 0.01 0.01 0.002 0.0 3000 pi_ohern,day,scavenge 0-12:00:00 1 1

bash bash/cells/submit_neuralTube.sh 24 20 1.0 0.01 0.01 0.002 0.002 3000 pi_ohern,day,scavenge 0-12:00:00 1 1

bash bash/cells/submit_neuralTube.sh 24 20 1.0 0.01 0.01 0.002 0.02 3000 pi_ohern,day,scavenge 0-12:00:00 1 1

%function drawWoundSims(N, calA0, k_a, smooth, deltaSq, d_flag, att)
t_stress_arr = ["1.0" "5.0" "25.0" "125.0"];
sm_arr = ["0" "1"];
att_arr = ["0.05" "0.1" "0.2" "0.29"];
for j=1:length(t_stress_arr)
  for k=1:length(sm_arr)
    for l=1:length(att_arr)
        drawWoundSims(50, "1.10", t_stress_arr(j), sm_arr(k), "4.0", "0.0", att_arr(l))
    end
  end
end

t_stress_arr = ["1.0" "5.0" "25.0" "125.0"];
sm_arr = ["0" "1"];
att_arr = ["0.05" "0.1" "0.2" "0.29"];
for j=1:length(t_stress_arr)
  for k=1:length(sm_arr)
    for l=1:length(att_arr)
      drawWoundSims(50, "1.10", t_stress_arr(j), sm_arr(k), "0.0", "3.0", att_arr(l))
    end
  end
end

drawWoundSims(50, "1.05", "5.0", "1", "4.0", "0.0", "0.2")

close all; clear;
N_arr = ["50"];
calA0_arr = ["1.15"];
t_stress_arr = ["1.0" "5.0" "25.0" "125.0" "625.0" "100000.0"];
%t_stress_arr = ["125.0"];
%t_stress_arr = ["100000.0"];
att_arr = ["0.1"];
%att_arr = ["0.05" "0.1" "0.15" "0.2" "0.25" "0.29"];
om_arr = ["0.001" "0.005" "0.01" "0.05"];
%om_arr = ["0.01"];
kl_arr = ["1.0"];
ka_arr = ["1.0"];
kb_arr = ["0.01"];
deltaSq_arr = ["4.0"];
d_flag_arr = ["0.0"];

for i=1:length(N_arr)
  for ii=1:length(calA0_arr)
    for iii=1:length(t_stress_arr)
      for j=1:length(att_arr)
        for jj=1:length(om_arr)
          for jjj=1:length(kl_arr)
            for k=1:length(ka_arr)
              for kk=1:length(kb_arr)
                for kkk=1:length(deltaSq_arr)
                  for l=1:length(d_flag_arr)
                    close all;
                    drawWoundSims(N_arr(i), calA0_arr(ii), t_stress_arr(iii),...
                     att_arr(j), om_arr(jj), kl_arr(jjj), ka_arr(k), ...
                     kb_arr(kk), deltaSq_arr(kkk), d_flag_arr(l))
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end


profiling:
valgrind --tool=callgrind --dump-instr=yes -v --instr-atstart=no ./main/epi2D/laserAblation.o 20 20 4 1.10 0.92 0.925 1.0 1.0 0.1 0.01  2.0  4.0  4.0 1.0  3.0  1.0 0.5  0  0   1 1  200  test > tmp
callgrind_control -i on
callgrind_control -k
kcachegrind callgrind.out.*

valgrind --tool=callgrind ./main/epi2D/laserAblation.o 20 20 4 1.10 0.92 0.925 1.0 1.0 0.1 0.01  2.0  4.0  4.0 1.0  3.0  1.0 0.5  0  0   1 1  200

tar -xvjf valgrind-3.19.0.tar.bz2
